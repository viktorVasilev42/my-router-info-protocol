services:
  router1:
    build: .
    container_name: my-rip-router1
    environment:
      - ROUTER_ID=1
    command: ["./peer-listen", "router", "1"]
    stdin_open: true
    tty: true
    networks:
      custom-net-1:
        ipv4_address: 192.168.100.10
      custom-net-3:
        ipv4_address: 192.168.150.10

  router2:
    build: .
    container_name: my-rip-router2
    environment:
      - ROUTER_ID=2
    command: ["./peer-listen", "router", "2"]
    stdin_open: true
    tty: true
    networks:
      custom-net-2:
        ipv4_address: 192.168.200.10
      custom-net-3:
        ipv4_address: 192.168.150.20


  host1:
    build: .
    container_name: rip-host1
    environment:
      - HOST_ID=1
    command: ["./peer-listen", "host", "101"]
    stdin_open: true
    tty: true
    networks:
      custom-net-1:
        ipv4_address: 192.168.100.11

  host2:
    build: .
    container_name: rip-host2
    environment:
      - HOST_ID=2
    command: ["./peer-listen", "host", "102"]
    stdin_open: true
    tty: true
    networks:
      custom-net-2:
        ipv4_address: 192.168.200.11

  host3:
    build: .
    container_name: rip-host3
    environment:
      - HOST_ID=3
    command: ["./peer-listen", "host", "103"]
    stdin_open: true
    tty: true
    networks:
      custom-net-2:
        ipv4_address: 192.168.200.12

  topology-grapher:
    build: .
    container_name: topology-grapher1
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
    network_mode: "host"
    command: ["./topology-grapher"]
    stdin_open: true
    tty: true
    depends_on:
      - router1
      - router2
      - host1

networks:
  custom-net-1:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.100.0/24"

  custom-net-2:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.200.0/24"

  custom-net-3:
    driver: bridge
    ipam:
      config:
        - subnet: "192.168.150.0/24"
      

